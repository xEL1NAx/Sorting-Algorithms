def quicksort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

def bubblesort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

def insertionSort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and key < arr[j]:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    return arr

def selectionSort(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

def sort_numbers(numbers, algorithm):
    if algorithm == 'quicksort':
        return quicksort(numbers)
    elif algorithm == 'bubblesort':
        return bubblesort(numbers)
    elif algorithm == 'insertionsort':
        return insertionSort(numbers)
    elif algorithm == 'selectionsort':
        return selectionSort(numbers)
    else:
        return 'Unbekannter Algorithmus'

numbers = list(map(int, input("Geben Sie Zahlen ein, getrennt durch Komma: ").split(',')))
algorithm = input("Geben Sie den Sortieralgorithmus ein (quicksort, bubblesort, insertionsort, selectionsort): ")
print('Sortierte Zahlen:', sort_numbers(numbers, algorithm))
